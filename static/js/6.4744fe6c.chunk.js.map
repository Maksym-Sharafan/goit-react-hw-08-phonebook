{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","views/PhonebookView.module.css","redux/phonebook/phonebook-selectors.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","views/PhonebookView.js"],"names":["module","exports","getItems","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","allSelectors","dispatch","useDispatch","handleChange","e","currentTarget","value","className","styles","contact__form","onSubmit","preventDefault","find","item","alert","allOperations","addContact","label__form","contact__input","type","pattern","title","required","onChange","button__submit","useStyles","makeStyles","theme","root","margin","spacing","width","Filter","classes","noValidate","TextField","id","label","variant","allActions","changeFilter","target","ContactList","filteredEl","contactList","Loader","color","height","timeout","length","map","contact","contactList__item","Button","onClick","deleteContact","App","useEffect","fetchContact","Phonebook","header_phonebook"],"mappings":"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","file":"static/js/6.4744fe6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__1cwHH\",\"label__form\":\"ContactForm_label__form__2MqY7\",\"contact__input\":\"ContactForm_contact__input__6u4-m\",\"button__submit\":\"ContactForm_button__submit__32kNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1FVPv\",\"contactList__item\":\"ContactList_contactList__item__2xw-N\",\"contactList__button\":\"ContactList_contactList__button__3shVN\",\"Loader\":\"ContactList_Loader__2CwuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Phonebook\":\"PhonebookView_Phonebook__3Khu3\",\"header_phonebook\":\"PhonebookView_header_phonebook__Blcuf\"};","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { allOperations, allSelectors } from 'redux/phonebook';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(allSelectors.getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const coincidence = items.find(item => item.name === name);\n    if (coincidence) {\n      alert(`${name} is already in contacts`);\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    dispatch(allOperations.addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.contact__form} onSubmit={handleSubmit}>\n      <label className={styles.label__form}>\n        Name\n        <input\n          className={styles.contact__input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label__form}>\n        Number\n        <input\n          className={styles.contact__input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button__submit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { allActions, allSelectors } from 'redux/phonebook';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '50ch',\n    },\n  },\n}));\n\nconst Filter = () => {\n  const filter = useSelector(allSelectors.getFilter);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onChangeValue = e => dispatch(allActions.changeFilter(e.target.value));\n\n  return (\n    <form className={classes.root} noValidate>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        value={filter}\n        onChange={onChangeValue}\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { allOperations, allSelectors } from 'redux/phonebook';\nimport styles from './ContactList.module.css';\nimport Button from '@material-ui/core/Button';\n\nconst ContactList = () => {\n  const filteredEl = useSelector(allSelectors.getVisibleContacts);\n  const loading = useSelector(allSelectors.getLoading);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(allOperations.deleteContact(id));\n\n  return (\n    <ul className={styles.contactList}>\n      {loading && (\n        <div className={styles.Loader}>\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        </div>\n      )}\n      {filteredEl.length > 0 ? (\n        filteredEl.map(contact => (\n          <li className={styles.contactList__item} key={contact.id}>\n            <span>{contact.name}</span> {contact.number}\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete\n            </Button>\n          </li>\n        ))\n      ) : (\n        <h2>Contact with this name was not found</h2>\n      )}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'Components/ContactForm';\nimport Filter from 'Components/Filter';\nimport ContactList from 'Components/ContactList';\nimport { allOperations } from 'redux/phonebook';\nimport { getItems } from 'redux/phonebook/phonebook-selectors';\n\nimport styles from './PhonebookView.module.css';\n// import 'App.css'\n\nconst App = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(allOperations.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.Phonebook}>\n      <h1 className={styles.header_phonebook}>Your phonebook</h1>\n      <ContactForm />\n      {items.length < 1 ? (\n        <h2>Add new contacts, your list is empty</h2>\n      ) : (\n        <div className=\"contacts\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}